unit FalconDep.Model.Command.Invoker;

interface

uses
  FalconDep.Model.Command.Interfaces,
  Grafi.Model.Iterator.Interfaces;

Type

  TInvoker = class(TInterfacedObject,IInvoker)
    private
      FList: IModelIterator<ICommand>;
    public
      constructor Create;
      destructor  Destroy; override;
      class function New: IInvoker;
      function Add( aValue : ICommand) : IInvoker;
      function Execute : IInvoker;
  end;

implementation

uses
  Grafi.Model.Iterator.Iterator;

{ TInvoker }

function TInvoker.Add(aValue: ICommand): IInvoker;
begin

end;

constructor TInvoker.Create;
begin
  FList := TModelIterator<ICommand>;
end;

destructor TInvoker.Destroy;
begin

  inherited;
end;

function TInvoker.Execute: IInvoker;
begin

end;

class function TInvoker.New: IInvoker;
begin
  Result := Self.Create;
end;

end.
