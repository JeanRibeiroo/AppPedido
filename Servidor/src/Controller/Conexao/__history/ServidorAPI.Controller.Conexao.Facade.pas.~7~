unit ServidorAPI.Controller.Conexao.Facade;

interface

uses
  ServidorAPI.Controller.Conexao.Interfaces,
  ServidorAPI.Model.Conexao.Interfaces;

Type
  TControllerConexoesFacade = class(TInterfacedObject,IControllerConexaoFacade)
    private
      FConexao: IModelConexao;
      FDataSet: IModelDataSet;
    public
      constructor Create;
      destructor  Destroy;override;
      class function New:IControllerConexaoFacade;
      function Conexao:IModelConexao;
      function Dataset:IModelDataSet;
  end;

implementation

uses
  ServidorAPI.Controller.Conexao.Factory.Conexoes,
  ServidorAPI.Controller.Conexao.Factory.DataSet;

{ TControllerConexoesFacade }

function TControllerConexoesFacade.Conexao: IModelConexao;
begin
  Result := FConexao;
end;

constructor TControllerConexoesFacade.Create;
begin
  FConexao := TControllerConexaoFactoryConexoes.New.Conexao;
  FDataSet := TControllerConexaoFactoryDataSet.New.DataSet(FConexao);
end;

function TControllerConexoesFacade.Dataset: IModelDataSet;
begin
  Result :=  FDataSet;
end;

destructor TControllerConexoesFacade.Destroy;
begin

  inherited;
end;

class function TControllerConexoesFacade.New: IControllerConexaoFacade;
begin
  Result := Self.Create
end;

end.
