unit Servidor.Model.Conexao.FireDack;

interface

uses Servidor.Model.Conexao.Interfaces, System.Classes, FireDAC.Comp.Client,
  FireDAC.Phys.MySQL, FireDAC.Comp.UI;

Type
  TControllerListBoxPrincipal = class(TInterfacedObject, IModelConexao)
  private
    FConn:TFDconnection;
    FDPhysMySQLDriverLink1: TFDPhysMySQLDriverLink;
    FDGUIxWaitCursor1: TFDGUIxWaitCursor;
    FDataBase: string;
    FUserName: string;
    FPassoWord:string;
    FDriveId:string;
    FServer:string;
    FDriverLink:string;
    FPorta:Integer;
  public
    constructor Create;
    destructor Destroy; override;
    class function New: IModelConexao;
    function &End: TComponent;
    function ConexaoParametros:IModelConexaoParametros;
  end;

implementation

uses
  System.SysUtils;

{ TControllerListBoxPrincipal }

function TControllerListBoxPrincipal.&End: TComponent;
begin
  Result := FConn;
end;

function TControllerListBoxPrincipal.ConexaoParametros: IModelConexaoParametros;
begin
 Result := Self;
end;

constructor TControllerListBoxPrincipal.Create;
begin
  FConn := TFDconnection.Create(nil);
  FDPhysMySQLDriverLink1 := TFDPhysMySQLDriverLink.Create(nil);
  FDGUIxWaitCursor1 := TFDGUIxWaitCursor.Create(nil);
end;

destructor TControllerListBoxPrincipal.Destroy;
begin
  FConn.Free;
  FDPhysMySQLDriverLink1.Free;
  FDGUIxWaitCursor1.Free;
  inherited;
end;

class function TControllerListBoxPrincipal.New: IModelConexao;
begin
  Result := Self.Create;
end;

end.
